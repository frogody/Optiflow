version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_PIPEDREAM_CLIENT_ID=${NEXT_PUBLIC_PIPEDREAM_CLIENT_ID}
        - NEXT_PUBLIC_PIPEDREAM_TOKEN=${NEXT_PUBLIC_PIPEDREAM_TOKEN}
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - .env.production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
    networks:
      - app-network

  # Add a database service if needed
  # db:
  #   image: postgres:14
  #   restart: unless-stopped
  #   volumes:
  #     - db-data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

# Uncomment if using database
# volumes:
#   db-data: 